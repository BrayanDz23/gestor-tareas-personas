{"ast":null,"code":"import { FormBuilder, Validators } from '@angular/forms';\nimport { TareaService } from '../servicios/tarea.service'; // Importamos el servicio para gestionar tareas\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../servicios/tarea.service\";\nimport * as i3 from \"@angular/common\";\nfunction CrearTareaComponent_div_4_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelement(1, \"input\", 12);\n    i0.ɵɵelementStart(2, \"button\", 5);\n    i0.ɵɵlistener(\"click\", function CrearTareaComponent_div_4_div_4_Template_button_click_2_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r8);\n      const j_r5 = restoredCtx.index;\n      const i_r2 = i0.ɵɵnextContext().index;\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.eliminarHabilidad(i_r2, j_r5));\n    });\n    i0.ɵɵtext(3, \"Eliminar Habilidad\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const j_r5 = ctx.index;\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"formControlName\", j_r5);\n  }\n}\nfunction CrearTareaComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 7);\n    i0.ɵɵelement(1, \"input\", 8)(2, \"input\", 9);\n    i0.ɵɵelementStart(3, \"div\", 10);\n    i0.ɵɵtemplate(4, CrearTareaComponent_div_4_div_4_Template, 4, 1, \"div\", 11);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"button\", 5);\n    i0.ɵɵlistener(\"click\", function CrearTareaComponent_div_4_Template_button_click_5_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r10);\n      const i_r2 = restoredCtx.index;\n      const ctx_r9 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r9.agregarHabilidad(i_r2));\n    });\n    i0.ɵɵtext(6, \"A\\u00F1adir Habilidad\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"button\", 5);\n    i0.ɵɵlistener(\"click\", function CrearTareaComponent_div_4_Template_button_click_7_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r10);\n      const i_r2 = restoredCtx.index;\n      const ctx_r11 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r11.eliminarPersona(i_r2));\n    });\n    i0.ɵɵtext(8, \"Eliminar Persona\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const persona_r1 = ctx.$implicit;\n    const i_r2 = ctx.index;\n    i0.ɵɵproperty(\"formGroupName\", i_r2);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngForOf\", persona_r1.get(\"habilidades\").controls);\n  }\n}\nexport let CrearTareaComponent = /*#__PURE__*/(() => {\n  class CrearTareaComponent {\n    constructor(fb, tareaService) {\n      this.fb = fb;\n      this.tareaService = tareaService;\n    }\n    ngOnInit() {\n      // Inicializamos el formulario con los campos necesarios y sus validaciones\n      this.tareaForm = this.fb.group({\n        nombre: ['', [Validators.required, Validators.minLength(5)]],\n        fechaLimite: ['', Validators.required],\n        personas: this.fb.array([]) // Array para almacenar personas asociadas\n      });\n    }\n\n    get personas() {\n      return this.tareaForm.get('personas'); // Método para acceder al FormArray de personas\n    }\n\n    agregarPersona() {\n      // Método para agregar una nueva persona al FormArray\n      const personaForm = this.fb.group({\n        nombre: ['', [Validators.required, Validators.minLength(5)]],\n        edad: ['', [Validators.required, Validators.min(18)]],\n        habilidades: this.fb.array([this.fb.control('')]) // Array para habilidades\n      });\n\n      this.personas.push(personaForm); // Agregamos la nueva persona al FormArray\n    }\n\n    eliminarPersona(index) {\n      // Método para eliminar una persona del FormArray\n      this.personas.removeAt(index);\n    }\n    agregarHabilidad(personaIndex) {\n      // Método para agregar una nueva habilidad a una persona\n      const habilidades = this.personas.at(personaIndex).get('habilidades');\n      habilidades.push(this.fb.control('')); // Agregamos una nueva habilidad al FormArray de habilidades\n    }\n\n    eliminarHabilidad(personaIndex, habilidadIndex) {\n      // Método para eliminar una habilidad de una persona\n      const habilidades = this.personas.at(personaIndex).get('habilidades');\n      habilidades.removeAt(habilidadIndex); // Eliminamos la habilidad especificada\n    }\n\n    crearTarea() {\n      // Método para crear una nueva tarea\n      if (this.tareaForm.valid) {\n        this.tareaService.agregarTarea(this.tareaForm.value); // Guardamos la tarea usando el servicio\n        this.tareaForm.reset(); // Reseteamos el formulario\n      }\n    }\n\n    static {\n      this.ɵfac = function CrearTareaComponent_Factory(t) {\n        return new (t || CrearTareaComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.TareaService));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: CrearTareaComponent,\n        selectors: [[\"app-crear-tarea\"]],\n        decls: 9,\n        vars: 2,\n        consts: [[3, \"formGroup\", \"ngSubmit\"], [\"formControlName\", \"nombre\", \"placeholder\", \"Nombre de la tarea\"], [\"formControlName\", \"fechaLimite\", \"type\", \"date\"], [\"formArrayName\", \"personas\"], [3, \"formGroupName\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"button\", 3, \"click\"], [\"type\", \"submit\"], [3, \"formGroupName\"], [\"formControlName\", \"nombre\", \"placeholder\", \"Nombre de la persona\"], [\"formControlName\", \"edad\", \"type\", \"number\", \"placeholder\", \"Edad\"], [\"formArrayName\", \"habilidades\"], [4, \"ngFor\", \"ngForOf\"], [\"placeholder\", \"Habilidad\", 3, \"formControlName\"]],\n        template: function CrearTareaComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"form\", 0);\n            i0.ɵɵlistener(\"ngSubmit\", function CrearTareaComponent_Template_form_ngSubmit_0_listener() {\n              return ctx.crearTarea();\n            });\n            i0.ɵɵelement(1, \"input\", 1)(2, \"input\", 2);\n            i0.ɵɵelementStart(3, \"div\", 3);\n            i0.ɵɵtemplate(4, CrearTareaComponent_div_4_Template, 9, 2, \"div\", 4);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(5, \"button\", 5);\n            i0.ɵɵlistener(\"click\", function CrearTareaComponent_Template_button_click_5_listener() {\n              return ctx.agregarPersona();\n            });\n            i0.ɵɵtext(6, \"A\\u00F1adir Persona\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(7, \"button\", 6);\n            i0.ɵɵtext(8, \"Crear Tarea\");\n            i0.ɵɵelementEnd()();\n          }\n          if (rf & 2) {\n            i0.ɵɵproperty(\"formGroup\", ctx.tareaForm);\n            i0.ɵɵadvance(4);\n            i0.ɵɵproperty(\"ngForOf\", ctx.personas.controls);\n          }\n        },\n        dependencies: [i3.NgForOf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NumberValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i1.FormGroupName, i1.FormArrayName],\n        styles: [\"@charset \\\"UTF-8\\\";h3[_ngcontent-%COMP%]{color:#2e4053;margin-bottom:20px;text-align:center}button[_ngcontent-%COMP%]{margin-top:20px}\"]\n      });\n    }\n  }\n  return CrearTareaComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}