{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport let TareaService = /*#__PURE__*/(() => {\n  class TareaService {\n    constructor() {\n      this.tareas = [];\n    }\n    // Obtener todas las tareas\n    getTareas() {\n      return this.tareas;\n    }\n    // Agregar una nueva tarea\n    addTarea(tarea) {\n      this.tareas.push(tarea);\n    }\n    // Eliminar una tarea por su ID\n    eliminarTarea(id) {\n      this.tareas = this.tareas.filter(tarea => tarea.id !== id);\n    }\n    // Marcar una tarea como completada\n    marcarComoCompletada(id) {\n      const tarea = this.tareas.find(t => t.id === id);\n      if (tarea) {\n        tarea.completada = true;\n      }\n    }\n    // Filtrar tareas por estado\n    filtrarTareas(estado) {\n      switch (estado) {\n        case 'completadas':\n          return this.tareas.filter(tarea => tarea.completada);\n        case 'pendientes':\n          return this.tareas.filter(tarea => !tarea.completada);\n        case 'todas':\n        default:\n          return this.tareas;\n      }\n    }\n    // Agregar persona a una tarea\n    agregarPersona(tareaId, persona) {\n      const tarea = this.tareas.find(t => t.id === tareaId);\n      if (tarea) {\n        tarea.personas.push(persona);\n      }\n    }\n    // Eliminar persona de una tarea\n    eliminarPersona(tareaId, personaNombre) {\n      const tarea = this.tareas.find(t => t.id === tareaId);\n      if (tarea) {\n        tarea.personas = tarea.personas.filter(persona => persona.nombreCompleto !== personaNombre);\n      }\n    }\n    // Agregar habilidad a una persona en una tarea\n    agregarHabilidad(tareaId, personaNombre, habilidad) {\n      const tarea = this.tareas.find(t => t.id === tareaId);\n      if (tarea) {\n        const persona = tarea.personas.find(p => p.nombreCompleto === personaNombre);\n        if (persona) {\n          persona.habilidades.push(habilidad);\n        }\n      }\n    }\n    // Eliminar habilidad de una persona en una tarea\n    eliminarHabilidad(tareaId, personaNombre, habilidad) {\n      const tarea = this.tareas.find(t => t.id === tareaId);\n      if (tarea) {\n        const persona = tarea.personas.find(p => p.nombreCompleto === personaNombre);\n        if (persona) {\n          persona.habilidades = persona.habilidades.filter(h => h !== habilidad);\n        }\n      }\n    }\n    static {\n      this.ɵfac = function TareaService_Factory(t) {\n        return new (t || TareaService)();\n      };\n    }\n    static {\n      this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n        token: TareaService,\n        factory: TareaService.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return TareaService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}