{"ast":null,"code":"import { FormBuilder, FormGroup, Validators, FormArray, FormControl } from '@angular/forms';\nimport { TareaService } from '../../services/tarea.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../services/tarea.service\";\nimport * as i3 from \"@angular/common\";\nfunction CrearTareaComponent_div_8_small_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\");\n    i0.ɵɵtext(1, \"El nombre es obligatorio.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CrearTareaComponent_div_8_small_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\");\n    i0.ɵɵtext(1, \"El nombre debe tener al menos 5 caracteres.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CrearTareaComponent_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 13);\n    i0.ɵɵtemplate(1, CrearTareaComponent_div_8_small_1_Template, 2, 0, \"small\", 14);\n    i0.ɵɵtemplate(2, CrearTareaComponent_div_8_small_2_Template, 2, 0, \"small\", 14);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    let tmp_0_0;\n    let tmp_1_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_0_0 = ctx_r0.tareaForm.get(\"nombre\")) == null ? null : tmp_0_0.errors == null ? null : tmp_0_0.errors.required);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_1_0 = ctx_r0.tareaForm.get(\"nombre\")) == null ? null : tmp_1_0.errors == null ? null : tmp_1_0.errors.minlength);\n  }\n}\nfunction CrearTareaComponent_div_13_small_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\");\n    i0.ɵɵtext(1, \"La fecha es obligatoria.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CrearTareaComponent_div_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 13);\n    i0.ɵɵtemplate(1, CrearTareaComponent_div_13_small_1_Template, 2, 0, \"small\", 14);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    let tmp_0_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_0_0 = ctx_r1.tareaForm.get(\"fechaLimite\")) == null ? null : tmp_0_0.errors == null ? null : tmp_0_0.errors.required);\n  }\n}\nfunction CrearTareaComponent_div_17_div_8_small_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\");\n    i0.ɵɵtext(1, \"La edad es obligatoria.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CrearTareaComponent_div_17_div_8_small_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\");\n    i0.ɵɵtext(1, \"La edad debe ser al menos 18.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CrearTareaComponent_div_17_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 25);\n    i0.ɵɵtemplate(1, CrearTareaComponent_div_17_div_8_small_1_Template, 2, 0, \"small\", 14);\n    i0.ɵɵtemplate(2, CrearTareaComponent_div_17_div_8_small_2_Template, 2, 0, \"small\", 14);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const persona_r7 = i0.ɵɵnextContext().$implicit;\n    let tmp_0_0;\n    let tmp_1_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_0_0 = persona_r7.get(\"edad\")) == null ? null : tmp_0_0.errors == null ? null : tmp_0_0.errors.required);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_1_0 = persona_r7.get(\"edad\")) == null ? null : tmp_1_0.errors == null ? null : tmp_1_0.errors.min);\n  }\n}\nfunction CrearTareaComponent_div_17_div_9_small_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\");\n    i0.ɵɵtext(1, \"El nombre es obligatorio.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CrearTareaComponent_div_17_div_9_small_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\");\n    i0.ɵɵtext(1, \"El nombre debe tener al menos 5 caracteres.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CrearTareaComponent_div_17_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 25);\n    i0.ɵɵtemplate(1, CrearTareaComponent_div_17_div_9_small_1_Template, 2, 0, \"small\", 14);\n    i0.ɵɵtemplate(2, CrearTareaComponent_div_17_div_9_small_2_Template, 2, 0, \"small\", 14);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const persona_r7 = i0.ɵɵnextContext().$implicit;\n    let tmp_0_0;\n    let tmp_1_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_0_0 = persona_r7.get(\"nombre\")) == null ? null : tmp_0_0.errors == null ? null : tmp_0_0.errors.required);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_1_0 = persona_r7.get(\"nombre\")) == null ? null : tmp_1_0.errors == null ? null : tmp_1_0.errors.minlength);\n  }\n}\nfunction CrearTareaComponent_div_17_div_13_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r22 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 26);\n    i0.ɵɵelement(1, \"input\", 27);\n    i0.ɵɵelementStart(2, \"button\", 20);\n    i0.ɵɵlistener(\"click\", function CrearTareaComponent_div_17_div_13_Template_button_click_2_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r22);\n      const j_r19 = restoredCtx.index;\n      const i_r8 = i0.ɵɵnextContext().index;\n      const ctx_r20 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r20.eliminarHabilidad(i_r8, j_r19));\n    });\n    i0.ɵɵtext(3, \"Eliminar Habilidad\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const j_r19 = ctx.index;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formControlName\", j_r19);\n  }\n}\nfunction CrearTareaComponent_div_17_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r24 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 15)(1, \"label\", 16);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 17);\n    i0.ɵɵelement(4, \"input\", 18)(5, \"input\", 19);\n    i0.ɵɵelementStart(6, \"button\", 20);\n    i0.ɵɵlistener(\"click\", function CrearTareaComponent_div_17_Template_button_click_6_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r24);\n      const i_r8 = restoredCtx.index;\n      const ctx_r23 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r23.eliminarPersona(i_r8));\n    });\n    i0.ɵɵtext(7, \"Eliminar\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(8, CrearTareaComponent_div_17_div_8_Template, 3, 2, \"div\", 21);\n    i0.ɵɵtemplate(9, CrearTareaComponent_div_17_div_9_Template, 3, 2, \"div\", 21);\n    i0.ɵɵelementStart(10, \"div\", 22)(11, \"h6\");\n    i0.ɵɵtext(12, \"Habilidades:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(13, CrearTareaComponent_div_17_div_13_Template, 4, 1, \"div\", 23);\n    i0.ɵɵelementStart(14, \"button\", 24);\n    i0.ɵɵlistener(\"click\", function CrearTareaComponent_div_17_Template_button_click_14_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r24);\n      const i_r8 = restoredCtx.index;\n      const ctx_r25 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r25.agregarHabilidad(i_r8));\n    });\n    i0.ɵɵtext(15, \"Agregar Habilidad\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const persona_r7 = ctx.$implicit;\n    const i_r8 = ctx.index;\n    let tmp_4_0;\n    let tmp_5_0;\n    i0.ɵɵproperty(\"formGroupName\", i_r8);\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate1(\"for\", \"persona\", i_r8, \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"Persona \", i_r8 + 1, \":\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate1(\"id\", \"persona\", i_r8, \"\");\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngIf\", ((tmp_4_0 = persona_r7.get(\"edad\")) == null ? null : tmp_4_0.invalid) && (((tmp_4_0 = persona_r7.get(\"edad\")) == null ? null : tmp_4_0.touched) || ((tmp_4_0 = persona_r7.get(\"edad\")) == null ? null : tmp_4_0.dirty)));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ((tmp_5_0 = persona_r7.get(\"nombre\")) == null ? null : tmp_5_0.invalid) && (((tmp_5_0 = persona_r7.get(\"nombre\")) == null ? null : tmp_5_0.touched) || ((tmp_5_0 = persona_r7.get(\"nombre\")) == null ? null : tmp_5_0.dirty)));\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngForOf\", persona_r7.get(\"habilidades\").controls);\n  }\n}\nfunction CrearTareaComponent_div_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 28)(1, \"small\");\n    i0.ɵɵtext(2, \"No puede haber personas con el mismo nombre.\");\n    i0.ɵɵelementEnd()();\n  }\n}\nexport let CrearTareaComponent = /*#__PURE__*/(() => {\n  class CrearTareaComponent {\n    constructor(fb, tareaService) {\n      this.fb = fb;\n      this.tareaService = tareaService;\n      this.tareaForm = this.fb.group({\n        id: [0],\n        nombre: ['', [Validators.required, Validators.minLength(5)]],\n        fechaLimite: ['', Validators.required],\n        personas: this.fb.array([], this.validarNombresDuplicados()) // Validación de duplicados a nivel del FormArray\n      });\n    }\n\n    ngOnInit() {\n      this.tareaService.tareaParaEditar.subscribe(tarea => {\n        if (tarea) {\n          this.tareaForm.patchValue({\n            id: tarea.id,\n            nombre: tarea.nombre,\n            fechaLimite: tarea.fechaLimite\n          });\n          this.tareaForm.setControl('personas', this.fb.array(tarea.personas.map(persona => this.crearPersonaFormGroup(persona)), this.validarNombresDuplicados()));\n        }\n      });\n    }\n    // Obtener el FormArray de personas\n    get personas() {\n      return this.tareaForm.get('personas');\n    }\n    // Crear un FormGroup para cada persona\n    crearPersonaFormGroup(persona) {\n      return this.fb.group({\n        nombre: [persona ? persona.nombre : '', [Validators.required, Validators.minLength(5)]],\n        edad: [persona ? persona.edad : '', [Validators.required, Validators.min(18)]],\n        habilidades: this.fb.array(persona ? persona.habilidades.map(h => this.fb.control(h)) : [this.fb.control('', Validators.required)])\n      });\n    }\n    // Agregar una persona al FormArray\n    agregarPersona() {\n      this.personas.push(this.crearPersonaFormGroup());\n      this.personas.updateValueAndValidity(); // Actualizar validación al agregar persona\n    }\n    // Eliminar una persona del FormArray\n    eliminarPersona(index) {\n      this.personas.removeAt(index);\n      this.personas.updateValueAndValidity(); // Actualizar validación al eliminar persona\n    }\n    // Agregar una habilidad al FormArray de habilidades de una persona\n    agregarHabilidad(index) {\n      const habilidades = this.personas.at(index).get('habilidades');\n      habilidades.push(this.fb.control('', Validators.required));\n    }\n    // Eliminar una habilidad del FormArray de habilidades de una persona\n    eliminarHabilidad(personaIndex, habilidadIndex) {\n      this.personas.at(personaIndex).get('habilidades').removeAt(habilidadIndex);\n    }\n    // Validación personalizada para evitar nombres duplicados\n    validarNombresDuplicados() {\n      return formArray => {\n        const nombres = formArray.controls.map(control => control.get('nombre')?.value?.toLowerCase()); // Convertir a minúsculas para comparación\n        const nombresUnicos = new Set(nombres);\n        if (nombresUnicos.size !== nombres.length) {\n          return {\n            nombresDuplicados: true\n          }; // Retorna un error si hay duplicados\n        }\n\n        return null; // Retorna null si no hay errores\n      };\n    }\n    // Guardar la tarea, validando todos los campos\n    guardarTarea() {\n      if (this.tareaForm.invalid) {\n        // Marcar todos los campos como tocados para mostrar las validaciones\n        this.marcarTodosComoTocados(this.tareaForm);\n        return; // No continuar si el formulario es inválido\n      }\n\n      const tarea = {\n        id: this.tareaForm.value.id,\n        nombre: this.tareaForm.value.nombre,\n        fechaLimite: this.tareaForm.value.fechaLimite,\n        personas: this.tareaForm.value.personas,\n        completada: false\n      };\n      if (tarea.id) {\n        this.tareaService.updateTarea(tarea); // Actualizar tarea existente\n      } else {\n        this.tareaService.addTarea(tarea); // Agregar nueva tarea\n      }\n\n      this.tareaForm.reset();\n    }\n    // Marcar todos los campos y subcampos como tocados\n    marcarTodosComoTocados(formGroup) {\n      Object.keys(formGroup.controls).forEach(field => {\n        const control = formGroup.get(field);\n        if (control instanceof FormControl) {\n          control.markAsTouched({\n            onlySelf: true\n          });\n        } else if (control instanceof FormGroup || control instanceof FormArray) {\n          this.marcarTodosComoTocados(control);\n        }\n      });\n    }\n    static {\n      this.ɵfac = function CrearTareaComponent_Factory(t) {\n        return new (t || CrearTareaComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.TareaService));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: CrearTareaComponent,\n        selectors: [[\"app-crear-tarea\"]],\n        standalone: true,\n        features: [i0.ɵɵStandaloneFeature],\n        decls: 23,\n        vars: 6,\n        consts: [[1, \"container\", \"mt-3\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"mb-3\"], [\"for\", \"nombre\", 1, \"form-label\"], [\"id\", \"nombre\", \"formControlName\", \"nombre\", 1, \"form-control\"], [\"class\", \"text-danger\", 4, \"ngIf\"], [\"for\", \"fechaLimite\", 1, \"form-label\"], [\"type\", \"date\", \"id\", \"fechaLimite\", \"formControlName\", \"fechaLimite\", 1, \"form-control\"], [\"formArrayName\", \"personas\", 1, \"mb-3\"], [3, \"formGroupName\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"text-danger mt-2\", 4, \"ngIf\"], [1, \"btn\", \"btn-secondary\", \"mt-2\", 3, \"click\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"disabled\"], [1, \"text-danger\"], [4, \"ngIf\"], [3, \"formGroupName\"], [1, \"me-2\", 3, \"for\"], [1, \"d-flex\"], [\"formControlName\", \"nombre\", \"placeholder\", \"Nombre\", 1, \"form-control\", \"me-2\", 3, \"id\"], [\"type\", \"number\", \"formControlName\", \"edad\", \"placeholder\", \"Edad\", 1, \"form-control\", \"me-2\"], [1, \"btn\", \"btn-danger\", \"btn-sm\", 3, \"click\"], [\"class\", \"text-danger me-2\", 4, \"ngIf\"], [\"formArrayName\", \"habilidades\", 1, \"mt-2\"], [\"class\", \"d-flex align-items-center mb-2\", 4, \"ngFor\", \"ngForOf\"], [1, \"btn\", \"btn-secondary\", \"btn-sm\", 3, \"click\"], [1, \"text-danger\", \"me-2\"], [1, \"d-flex\", \"align-items-center\", \"mb-2\"], [\"placeholder\", \"Habilidad\", 1, \"form-control\", \"me-2\", 3, \"formControlName\"], [1, \"text-danger\", \"mt-2\"]],\n        template: function CrearTareaComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n            i0.ɵɵtext(2, \"Crear/Editar Tarea\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(3, \"form\", 1);\n            i0.ɵɵlistener(\"ngSubmit\", function CrearTareaComponent_Template_form_ngSubmit_3_listener() {\n              return ctx.guardarTarea();\n            });\n            i0.ɵɵelementStart(4, \"div\", 2)(5, \"label\", 3);\n            i0.ɵɵtext(6, \"Nombre de la Tarea:\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelement(7, \"input\", 4);\n            i0.ɵɵtemplate(8, CrearTareaComponent_div_8_Template, 3, 2, \"div\", 5);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(9, \"div\", 2)(10, \"label\", 6);\n            i0.ɵɵtext(11, \"Fecha L\\u00EDmite:\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelement(12, \"input\", 7);\n            i0.ɵɵtemplate(13, CrearTareaComponent_div_13_Template, 2, 1, \"div\", 5);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(14, \"div\", 8)(15, \"h6\");\n            i0.ɵɵtext(16, \"Personas Asociadas:\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵtemplate(17, CrearTareaComponent_div_17_Template, 16, 7, \"div\", 9);\n            i0.ɵɵtemplate(18, CrearTareaComponent_div_18_Template, 3, 0, \"div\", 10);\n            i0.ɵɵelementStart(19, \"button\", 11);\n            i0.ɵɵlistener(\"click\", function CrearTareaComponent_Template_button_click_19_listener() {\n              return ctx.agregarPersona();\n            });\n            i0.ɵɵtext(20, \"Agregar Persona\");\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(21, \"button\", 12);\n            i0.ɵɵtext(22, \"Guardar Tarea\");\n            i0.ɵɵelementEnd()()();\n          }\n          if (rf & 2) {\n            let tmp_1_0;\n            let tmp_2_0;\n            i0.ɵɵadvance(3);\n            i0.ɵɵproperty(\"formGroup\", ctx.tareaForm);\n            i0.ɵɵadvance(5);\n            i0.ɵɵproperty(\"ngIf\", ((tmp_1_0 = ctx.tareaForm.get(\"nombre\")) == null ? null : tmp_1_0.invalid) && (((tmp_1_0 = ctx.tareaForm.get(\"nombre\")) == null ? null : tmp_1_0.touched) || ((tmp_1_0 = ctx.tareaForm.get(\"nombre\")) == null ? null : tmp_1_0.dirty)));\n            i0.ɵɵadvance(5);\n            i0.ɵɵproperty(\"ngIf\", ((tmp_2_0 = ctx.tareaForm.get(\"fechaLimite\")) == null ? null : tmp_2_0.invalid) && (((tmp_2_0 = ctx.tareaForm.get(\"fechaLimite\")) == null ? null : tmp_2_0.touched) || ((tmp_2_0 = ctx.tareaForm.get(\"fechaLimite\")) == null ? null : tmp_2_0.dirty)));\n            i0.ɵɵadvance(4);\n            i0.ɵɵproperty(\"ngForOf\", ctx.personas.controls);\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"ngIf\", ctx.personas.errors == null ? null : ctx.personas.errors.nombresDuplicados);\n            i0.ɵɵadvance(3);\n            i0.ɵɵproperty(\"disabled\", ctx.tareaForm.invalid);\n          }\n        },\n        dependencies: [i3.NgForOf, i3.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NumberValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i1.FormGroupName, i1.FormArrayName],\n        styles: [\".container[_ngcontent-%COMP%]{max-width:800px}\"]\n      });\n    }\n  }\n  return CrearTareaComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}